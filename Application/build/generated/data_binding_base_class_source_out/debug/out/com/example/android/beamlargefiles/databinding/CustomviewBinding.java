// Generated by view binder compiler. Do not edit!
package com.example.android.beamlargefiles.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.example.android.beamlargefiles.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonOk;

  @NonNull
  public final Button buttonSms;

  @NonNull
  public final EditText etAmount;

  @NonNull
  public final LinearLayout etAmountDetail;

  @NonNull
  public final EditText etComment;

  @NonNull
  public final TextView etCurrentBalance;

  @NonNull
  public final LinearLayout etCurrentBalanceUpdate;

  @NonNull
  public final LinearLayout etLastCollected;

  @NonNull
  public final TextView etLastCollectedAmount;

  @NonNull
  public final LinearLayout etMobileNo;

  @NonNull
  public final TextView etMobileNumber;

  @NonNull
  public final TextView etPreviousBal;

  @NonNull
  public final LinearLayout etPreviousBalance;

  @NonNull
  public final LinearLayout linAmount;

  @NonNull
  public final LinearLayout linBtnSave;

  @NonNull
  public final TextView tvAmount;

  private CustomviewBinding(@NonNull LinearLayout rootView, @NonNull Button buttonOk,
      @NonNull Button buttonSms, @NonNull EditText etAmount, @NonNull LinearLayout etAmountDetail,
      @NonNull EditText etComment, @NonNull TextView etCurrentBalance,
      @NonNull LinearLayout etCurrentBalanceUpdate, @NonNull LinearLayout etLastCollected,
      @NonNull TextView etLastCollectedAmount, @NonNull LinearLayout etMobileNo,
      @NonNull TextView etMobileNumber, @NonNull TextView etPreviousBal,
      @NonNull LinearLayout etPreviousBalance, @NonNull LinearLayout linAmount,
      @NonNull LinearLayout linBtnSave, @NonNull TextView tvAmount) {
    this.rootView = rootView;
    this.buttonOk = buttonOk;
    this.buttonSms = buttonSms;
    this.etAmount = etAmount;
    this.etAmountDetail = etAmountDetail;
    this.etComment = etComment;
    this.etCurrentBalance = etCurrentBalance;
    this.etCurrentBalanceUpdate = etCurrentBalanceUpdate;
    this.etLastCollected = etLastCollected;
    this.etLastCollectedAmount = etLastCollectedAmount;
    this.etMobileNo = etMobileNo;
    this.etMobileNumber = etMobileNumber;
    this.etPreviousBal = etPreviousBal;
    this.etPreviousBalance = etPreviousBalance;
    this.linAmount = linAmount;
    this.linBtnSave = linBtnSave;
    this.tvAmount = tvAmount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.customview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonOk;
      Button buttonOk = rootView.findViewById(id);
      if (buttonOk == null) {
        break missingId;
      }

      id = R.id.buttonSms;
      Button buttonSms = rootView.findViewById(id);
      if (buttonSms == null) {
        break missingId;
      }

      id = R.id.etAmount;
      EditText etAmount = rootView.findViewById(id);
      if (etAmount == null) {
        break missingId;
      }

      id = R.id.etAmountDetail;
      LinearLayout etAmountDetail = rootView.findViewById(id);
      if (etAmountDetail == null) {
        break missingId;
      }

      id = R.id.etComment;
      EditText etComment = rootView.findViewById(id);
      if (etComment == null) {
        break missingId;
      }

      id = R.id.etCurrentBalance;
      TextView etCurrentBalance = rootView.findViewById(id);
      if (etCurrentBalance == null) {
        break missingId;
      }

      id = R.id.etCurrentBalanceUpdate;
      LinearLayout etCurrentBalanceUpdate = rootView.findViewById(id);
      if (etCurrentBalanceUpdate == null) {
        break missingId;
      }

      id = R.id.etLastCollected;
      LinearLayout etLastCollected = rootView.findViewById(id);
      if (etLastCollected == null) {
        break missingId;
      }

      id = R.id.etLastCollectedAmount;
      TextView etLastCollectedAmount = rootView.findViewById(id);
      if (etLastCollectedAmount == null) {
        break missingId;
      }

      id = R.id.etMobileNo;
      LinearLayout etMobileNo = rootView.findViewById(id);
      if (etMobileNo == null) {
        break missingId;
      }

      id = R.id.etMobileNumber;
      TextView etMobileNumber = rootView.findViewById(id);
      if (etMobileNumber == null) {
        break missingId;
      }

      id = R.id.etPreviousBal;
      TextView etPreviousBal = rootView.findViewById(id);
      if (etPreviousBal == null) {
        break missingId;
      }

      id = R.id.etPreviousBalance;
      LinearLayout etPreviousBalance = rootView.findViewById(id);
      if (etPreviousBalance == null) {
        break missingId;
      }

      id = R.id.linAmount;
      LinearLayout linAmount = rootView.findViewById(id);
      if (linAmount == null) {
        break missingId;
      }

      id = R.id.linBtnSave;
      LinearLayout linBtnSave = rootView.findViewById(id);
      if (linBtnSave == null) {
        break missingId;
      }

      id = R.id.tvAmount;
      TextView tvAmount = rootView.findViewById(id);
      if (tvAmount == null) {
        break missingId;
      }

      return new CustomviewBinding((LinearLayout) rootView, buttonOk, buttonSms, etAmount,
          etAmountDetail, etComment, etCurrentBalance, etCurrentBalanceUpdate, etLastCollected,
          etLastCollectedAmount, etMobileNo, etMobileNumber, etPreviousBal, etPreviousBalance,
          linAmount, linBtnSave, tvAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
