// Generated by view binder compiler. Do not edit!
package com.example.android.beamlargefiles.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.example.android.beamlargefiles.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewInformationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button goBackButton;

  @NonNull
  public final Button showButtonPrivate;

  @NonNull
  public final Button showButtonPublic;

  @NonNull
  public final TextView textViewGetSavedData;

  @NonNull
  public final TextView textViewSavedData;

  private ActivityViewInformationBinding(@NonNull RelativeLayout rootView,
      @NonNull Button goBackButton, @NonNull Button showButtonPrivate,
      @NonNull Button showButtonPublic, @NonNull TextView textViewGetSavedData,
      @NonNull TextView textViewSavedData) {
    this.rootView = rootView;
    this.goBackButton = goBackButton;
    this.showButtonPrivate = showButtonPrivate;
    this.showButtonPublic = showButtonPublic;
    this.textViewGetSavedData = textViewGetSavedData;
    this.textViewSavedData = textViewSavedData;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.goBackButton;
      Button goBackButton = rootView.findViewById(id);
      if (goBackButton == null) {
        break missingId;
      }

      id = R.id.showButton_private;
      Button showButtonPrivate = rootView.findViewById(id);
      if (showButtonPrivate == null) {
        break missingId;
      }

      id = R.id.showButton_public;
      Button showButtonPublic = rootView.findViewById(id);
      if (showButtonPublic == null) {
        break missingId;
      }

      id = R.id.textView_get_saved_data;
      TextView textViewGetSavedData = rootView.findViewById(id);
      if (textViewGetSavedData == null) {
        break missingId;
      }

      id = R.id.textView_saved_data;
      TextView textViewSavedData = rootView.findViewById(id);
      if (textViewSavedData == null) {
        break missingId;
      }

      return new ActivityViewInformationBinding((RelativeLayout) rootView, goBackButton,
          showButtonPrivate, showButtonPublic, textViewGetSavedData, textViewSavedData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
